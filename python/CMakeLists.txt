#Glob the source code
SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${CMAKE_SOURCE_DIR}/cmake/Modules/")

SET(Boost_NEEDED_LIBS filesystem
                      python
                      thread
                      system
                      )

FIND_PACKAGE(OPENVDB REQUIRED)
FIND_PACKAGE(Boost COMPONENTS ${Boost_NEEDED_LIBS} REQUIRED)
FIND_PACKAGE(OpenEXR REQUIRED)
FIND_PACKAGE(OpenImageIO REQUIRED)
FIND_PACKAGE(TBB REQUIRED)
FIND_PACKAGE(HALF REQUIRED)
FIND_PACKAGE(PYTHONLIBS)


INCLUDE_DIRECTORIES(${CMAKE_SOURCE_DIR}/include
      ${OPENVDB_INCLUDE_DIRS}
      ${OPENVDB_INCLUDE_PYTHON_DIRS}
      ${Boost_INCLUDE_DIRS}
      ${OPENEXR_INCLUDE_DIRS}
      ${HALF_INCLUDE_DIRS}
      ${OPENIMAGEIO_INCLUDE_DIRS}
      ${TBB_INCLUDE_DIRS}
      ${PYTHON_INCLUDE_PATH}
  )
#Add MeshPotato library

#LINK_LIBRARIES(${CMAKE_SOURCE_DIR}/lib/meshpotato)

#Build MPMesh
SET(PYMPMESH_SRC mpmesh.C)
#Build MPNoise
SET(PYMPNOISE_SRC mpnoise.C)

#Build MPUtils
SET(PYMPUTILS_SRC mputils.C)

#Build MPVolume
SET(PYMPVOLUME_SRC mpvolume.C)

ADD_LIBRARY(mpmesh SHARED ${PYMPMESH_SRC})
SET_TARGET_PROPERTIES(mpmesh PROPERTIES PREFIX "")
SET_TARGET_PROPERTIES(mpmesh PROPERTIES SUFFIX ".so")
TARGET_LINK_LIBRARIES(mpmesh meshpotato ${OPENVDB_LIBRARIES} ${OPENVDB_PYTHON_LIBRARY} ${PYTHON_LIBRARIES} ${Boost_LIBRARIES} ${OPENEXR_LIBRARIES} ${HALF_LIBRARIES} ${OPENIMAGEIO_LIBRARIES} ${TBB_LIBRARIES})
INSTALL(TARGETS mpmesh DESTINATION pymeshpotato)
